load 'test_helper/common-setup'
_common_setup

# bats test_tags=failure
@test "testing upper boundaries for quality failure" {
    run optim_and_batch_convert_webp -q 1000
    assert_output -p "Quality must be an integer between 0 and 100"
    assert_failure

    run optim_and_batch_convert_webp -q 101
    assert_output -p "Quality must be an integer between 0 and 100"
    assert_failure

    run optim_and_batch_convert_webp -q 100000
    assert_output -p "Quality must be an integer between 0 and 100"
    assert_failure

    run optim_and_batch_convert_webp -q 100.5
    assert_output -p "Quality must be an integer between 0 and 100"
    assert_failure
}

# bats test_tags=failure
@test "testing lower boundaries for quality failure" {
    run optim_and_batch_convert_webp -q 0.1
    assert_output -p "Quality must be an integer between 0 and 100"
    assert_failure

    run optim_and_batch_convert_webp -q -10
    assert_output -p "Quality must be an integer between 0 and 100"
    assert_failure

    run optim_and_batch_convert_webp -q -1
    assert_output -p "Quality must be an integer between 0 and 100"
    assert_failure

    run optim_and_batch_convert_webp -q -1000
    assert_output -p "Quality must be an integer between 0 and 100"
    assert_failure
}

# bats test_tags=failure
@test "testing setting size for mobile images failure" {
    run optim_and_batch_convert_webp -m 2300
    assert_output -p "Mobile size must be an integer between 0 and 2200px"
    assert_failure
  
    run optim_and_batch_convert_webp -m -10
    assert_output -p "Mobile size must be an integer between 0 and 2200px"
    assert_failure

    run optim_and_batch_convert_webp -m 123.97
    assert_output -p "Mobile size must be an integer between 0 and 2200px"
    assert_failure

    run optim_and_batch_convert_webp -m 2201
    assert_output -p "Mobile size must be an integer between 0 and 2200px"
    assert_failure
  
    run optim_and_batch_convert_webp -m -1
    assert_output -p "Mobile size must be an integer between 0 and 2200px"
    assert_failure
}

# bats test_tags=failure
@test "testing setting size for tablet images failure" {
    run optim_and_batch_convert_webp -t 2300
    assert_output -p "Tablet size must be an integer between 0 and 2200px"
    assert_failure
  
    run optim_and_batch_convert_webp -t -1000
    assert_output -p "Tablet size must be an integer between 0 and 2200px"
    assert_failure

    run optim_and_batch_convert_webp -t 123.97
    assert_output -p "Tablet size must be an integer between 0 and 2200px"
    assert_failure

    run optim_and_batch_convert_webp -t 2201
    assert_output -p "Tablet size must be an integer between 0 and 2200px"
    assert_failure
  
    run optim_and_batch_convert_webp -t -1
    assert_output -p "Tablet size must be an integer between 0 and 2200px"
    assert_failure
}

# bats test_tags=failure
@test "testing setting size for desktop images failure" {
    run optim_and_batch_convert_webp -d 2301
    assert_output -p "Desktop size must be an integer between 0 and 2200px"
    assert_failure
  
    run optim_and_batch_convert_webp -d -0.0001
    assert_output -p "Desktop size must be an integer between 0 and 2200px"
    assert_failure

    run optim_and_batch_convert_webp -d 942.123
    assert_output -p "Desktop size must be an integer between 0 and 2200px"
    assert_failure

    run optim_and_batch_convert_webp -d 2201
    assert_output -p "Desktop size must be an integer between 0 and 2200px"
    assert_failure
  
    run optim_and_batch_convert_webp -d -1
    assert_output -p "Desktop size must be an integer between 0 and 2200px"
    assert_failure
}

# bats test_tags=success
@test 'testing success case 1 -- with all variables set' {
    declare -A mapping
    mock_commands mapping cwebp mkdir imageoptim convert cp

    run optim_and_batch_convert_webp file1.jpeg
    assert_success
    assert_equal "$(mock_get_call_num ${mapping[mkdir]})"  2
    assert_equal "$(mock_get_call_num ${mapping[cwebp]})"  1

    unmock_commands cwebp cp imageoptim convert
}