# the only thing that will ever be mutating this associative
# array is the setup function -- updating the mock paths
# for the mocked commands, which teardown() will access
# after a given test has run
load 'test_helper/common-setup'
_common_setup

setup() {
    mock_commands cwebp cp imageoptim convert
}

teardown() {
  unmock_commands cwebp cp imageoptim convert
}

# bats test_tags=quality
@test "testing upper boundaries for quality" {
    run optim_and_batch_convert_webp -q 1000
    assert_output -p "Quality must be an integer between 0 and 100"
    assert_failure

    run optim_and_batch_convert_webp -q 101
    assert_output -p "Quality must be an integer between 0 and 100"
    assert_failure

    run optim_and_batch_convert_webp -q 100000
    assert_output -p "Quality must be an integer between 0 and 100"
    assert_failure

    run optim_and_batch_convert_webp -q 100.5
    assert_output -p "Quality must be an integer between 0 and 100"
    assert_failure
}

# bats test_tags=quality
@test "testing lower boundaries for quality" {
    run optim_and_batch_convert_webp -q 0.1
    assert_output -p "Quality must be an integer between 0 and 100"
    assert_failure

    run optim_and_batch_convert_webp -q -10
    assert_output -p "Quality must be an integer between 0 and 100"
    assert_failure

    run optim_and_batch_convert_webp -q -1
    assert_output -p "Quality must be an integer between 0 and 100"
    assert_failure

    run optim_and_batch_convert_webp -q -1000
    assert_output -p "Quality must be an integer between 0 and 100"
    assert_failure
}


